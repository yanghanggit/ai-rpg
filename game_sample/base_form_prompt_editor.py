import sys
from pathlib import Path

root_dir = Path(__file__).resolve().parent.parent
sys.path.append(str(root_dir))
from loguru import logger
from game_sample.actor_profile_draft import DATA_BASE


############################################################################################################
############################################################################################################
############################################################################################################
def _generate_original_actor_base_form_prompt(name: str, background: str) -> str:

    if background == "":
        assert False, "Please provide a story for the character."
        return ""

    return f"""# 请为我创建并生成一个游戏角色的基本形象描述文本

## 游戏介绍
这个游戏以中国三国时代为背景，结合《三国演义》的历史基础，并融合奇幻与恐怖元素。
游戏设定在一个充满战争、权谋和英雄主义的架空三国世界。

## 角色姓名: {name}

## 角色设定与背景故事 
{background}

## 描述要求
请根据以下方面生成角色的基本形象描述：
1. 面部（包含肤色）
2. 头发
3. 胡须（男性专属）
4. 化妆（女性专属）
5. 体型（高矮、胖瘦）
6. 特殊特征（如疤痕、纹身），可根据角色背景故事决定是否添加

## 输出内容规则
- 生成客观、描述性的外貌特征，避免主观判断、情绪化或推测性的表达；不描述历史背景、原因或结果，只描述特征本身。
- 去除目的性描述，避免说明意图或解释特征或动作存在的原因。
- 避免对表情或外貌特征的情感状态描述，如“坚毅”、“平静”、“给人...的感觉”等。
- 不使用角色名字，用“他/她/他们”等人称指代角色。
- 开头直接描述，不使用“某某是一位…”的句式。

## 输出格式要求
- 以第三人称书写。
- 整体呈现为一个连贯的段落。"""


############################################################################################################
############################################################################################################
############################################################################################################
"""
肤色略显黝黑，展现长期在阳光下劳作的痕迹。
头发黑色，稀疏而干燥，长度及肩，显得有些凌乱。
脸颊削瘦，轮廓分明，颧骨略高。胡须杂乱，覆盖在下巴与脸颊两侧，未曾细心修剪。
体型瘦弱，中等身高，骨骼突出，四肢纤细但有肌肉线条，显现出因体力劳动锻炼而来的结实感。
额角上有一道浅浅的疤痕，淡化在肤色之中。
"""
############################################################################################################
############################################################################################################
############################################################################################################


if __name__ == "__main__":

    for actor_name, actor_story in DATA_BASE.items():
        prompt = _generate_original_actor_base_form_prompt(actor_name, actor_story)
        logger.info(prompt)
